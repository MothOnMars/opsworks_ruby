{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to opsworks_ruby \u00b6 opsworks_ruby is a set of chef recipes to ease the deployment to AWS OpsWorks service. It was created, when Amazon introduced Chef 12 to OpsWorks stack without support for any chef recipes. The main goal of this project is to mimic Chef 11 OpsWorks stack as close as possible. The code is open source, and available on github . The main documentation for the site is organized into a couple sections: User Documentation Cookbook Documentation About opsworks_ruby User Documentation \u00b6 Getting Started Super Quick Start Quick Start Full configuration Troubleshooting Deployment fails with errors regarding application code SSL not working in legacy browsers Some applications on my Layer deploys, some of them not Cookbook Documentation \u00b6 Supported Technologies Requirements Cookbooks Platform Attributes Stack attributes Application attributes Recipes About opsworks_ruby \u00b6 Contributing Pull Requests Running Tests Author and Contributors Author Contributors Changelog License","title":"Home"},{"location":"#welcome-to-opsworks_ruby","text":"opsworks_ruby is a set of chef recipes to ease the deployment to AWS OpsWorks service. It was created, when Amazon introduced Chef 12 to OpsWorks stack without support for any chef recipes. The main goal of this project is to mimic Chef 11 OpsWorks stack as close as possible. The code is open source, and available on github . The main documentation for the site is organized into a couple sections: User Documentation Cookbook Documentation About opsworks_ruby","title":"Welcome to opsworks_ruby"},{"location":"#user-documentation","text":"Getting Started Super Quick Start Quick Start Full configuration Troubleshooting Deployment fails with errors regarding application code SSL not working in legacy browsers Some applications on my Layer deploys, some of them not","title":"User Documentation"},{"location":"#cookbook-documentation","text":"Supported Technologies Requirements Cookbooks Platform Attributes Stack attributes Application attributes Recipes","title":"Cookbook Documentation"},{"location":"#about-opsworks_ruby","text":"Contributing Pull Requests Running Tests Author and Contributors Author Contributors Changelog License","title":"About opsworks_ruby"},{"location":"attributes/","text":"Attributes \u00b6 Attributes format follows the guidelines of old Chef 11.x based OpsWorks stack. So all of them, need to be placed under node['deploy'][<application_shortname>] . Attributes (and whole logic of this cookbook) are divided to six sections. Following convention is used: app == node['deploy'][<application_shortname>] so for example app['framework']['adapter'] actually means node['deploy'][<application_shortname>]['framework']['adapter'] . Stack attributes \u00b6 These attributes are used on Stack/Layer level globally to configure the opsworks_ruby cookbook itself. They should'nt be used under node['deploy'][<application_shortname>] (notice lack of the app[] convention). node['applications'] An array of application shortnames which should be deployed to given layer. If set, only applications witch deploy flag set (on OpsWorks side) included in this list will be deployed. If not set, all deploy application will be supported. This parameter mostly matters during the setup phase, since all application in given stack are deployed to the given layer. Using this paramter you can narrow the list to application which you actually intend to use. !!! note Important thing is, that when you try to do a manual deploy from OpsWorks of an application, not included in this list - it will be skipped, as this list takes precedence over anything else. node['ruby-ng']['ruby_version'] Type: string Default: 2.4 Sets the Ruby version used through the system. See ruby-ng cookbook documentation for more details Application attributes \u00b6 global \u00b6 Global parameters apply to the whole application, and can be used by any section (framework, appserver etc.). app['global']['environment'] Type: string Default: production Sets the \"deploy environment\" for all the app-related (for example RAILS_ENV in Rails) actions in the project (server, worker, etc.) app['global']['symlinks'] Note Important Notice: Any values for this parameter will be merged to the defaults Type: key-value Default: { \"system\": \"public/system\", \"assets\": \"public/assets\", \"cache\": \"tmp/cache\", \"pids\": \"tmp/pids\", \"log\": \"log\" } List of symlinks created to the shared directory. The format is {\"shared_path\": \"release_path\"} . For example {\"system\", \"public/system\"} means: Link /src/www/app_name/current/public/system to /src/www/app_name/shared/system . app['global']['create_dirs_before_symlink'] Note Important Notice: Any values for this parameter will be appended to the defaults Type: array Default: [\"tmp\", \"public\", \"config\", \"../../shared/cache\", \"../../shared/assets\"] List of directories to be created before symlinking. Paths are relative to release_path . For example tmp becomes /srv/www/app_name/current/tmp . app['global']['purge_before_symlink'] Note Important Notice: Any values for this parameter will be appended to the defaults Type: array Default: [\"log\", \"tmp/cache\", \"tmp/pids\", \"public/system\", \"public/assets\"] List of directories to be wiped out before symlinking. Paths are relative to release_path . For example tmp becomes /srv/www/app_name/current/tmp . app['global']['rollback_on_error'] Type: boolean Default: true When set to true, any failed deploy will be removed from releases directory. database \u00b6 Those parameters will be passed without any alteration to the database.yml file. Keep in mind, that if you have RDS connected to your OpsWorks application, you don't need to use them. The chef will do all the job, and determine them for you. app['database']['adapter'] Supported values: mariadb , mysql , postgresql , sqlite3 Default: sqlite3 ActiveRecord adapter which will be used for database connection. app['database']['username'] Username used to authenticate to the DB app['database']['password'] Password used to authenticate to the DB app['database']['host'] Database host app['database']['database'] Database name app['database'][<any other>] Any other key-value pair provided here, will be passed directly to the database.yml scm \u00b6 Those parameters can also be determined from OpsWorks application, and usually you don't need to provide them here. Currently only git is supported. app['scm']['scm_provider'] Supported values: git Default: git SCM used by the cookbook to clone the repo. app['scm']['remove_scm_files'] Supported values: true , false Default: true If set to true, all SCM leftovers (like .git ) will be removed. app['scm']['repository'] Repository URL app['scm']['revision'] Branch name/SHA1 of commit which should be use as a base of the deployment. app['scm']['ssh_key'] A private SSH deploy key (the key itself, not the file name), used when fetching repositories via SSH. app['scm']['ssh_wrapper'] A wrapper script, which will be used by git when fetching repository via SSH. Essentially, a value of GIT_SSH environment variable. This cookbook provides one of those scripts for you, so you shouldn't alter this variable unless you know what you're doing. app['scm']['enabled_submodules'] If set to true , any submodules included in the repository, will also be fetched. framework \u00b6 Pre-optimalization for specific frameworks (like migrations, cache etc.). Currently hanami.rb and Rails are supported. app['framework']['adapter'] Supported values: null , hanami , padrino , rails Default: rails Ruby framework used in project. app['framework']['migrate'] Supported values: true , false Default: true If set to true , migrations will be launch during deployment. app['framework']['migration_command'] A command which will be invoked to perform migration. This cookbook comes with predefined migration commands, well suited for the task, and usually you don't have to change this parameter. app['framework']['assets_precompile'] Supported values: true , false Default: true app['framework']['assets_precompilation_command'] A command which will be invoked to precompile assets. padrino \u00b6 For Padrino, slight adjustments needs to be made. Since there are many database adapters supported, instead of creating configuration for each one, the DATABASE_URL environmental variable is provided. You need to parse it in your config/database.rb file and properly pass to the configuration options. For example, for ActiveRecord: database_url = ENV['DATABASE_URL'] && ActiveRecord::ConnectionAdapters::ConnectionSpecification::ConnectionUrlResolver.new(ENV['DATABASE_URL']).to_hash ActiveRecord::Base.configurations[:production] = database_url || { :adapter => 'sqlite3', :database => Padrino.root('db', 'dummy_app_production.db') } rails \u00b6 app['framework']['envs_in_console'] Warning This is highly unstable feature. If you experience any troubles with deployments, and have this feature enabled, consider disabling it as a first step in your debugging process. Supported values: true , false Default: false If set to true, rails console will be invoked with all application-level environment variables set. appserver \u00b6 Configuration parameters for the ruby application server. Currently Puma , Thin and Unicorn are supported. app['appserver']['adapter'] Default: puma Supported values: puma , thin , unicorn , null Server on the application side, which will receive requests from webserver in front. null means no appserver enabled. app['appserver']['application_yml'] Supported values: true , false Default: false Creates a config/application.yml file with all pre-configured environment variables. Useful for gems like figaro app['appserver']['dot_env'] Supported values: true , false Default: false Creates a .env file with all pre-configured environment variables. Useful for gems like dotenv app['appserver']['preload_app'] Supported values: true , false Default: true Enabling this preloads an application before forking worker processes. app['appserver']['timeout'] Default: 50 Sets the timeout of worker processes to seconds. app['appserver']['worker_processes']| Default: 4 Sets the current number of worker processes. Each worker process will serve exactly one client at a time. unicorn \u00b6 app['appserver']['backlog'] Default: 1024 app['appserver']['delay'] Default: 0.5 app['appserver']['tcp_nodelay'] Supported values: true , false Default: true app['appserver']['tcp_nopush'] Supported values: true , false Default: false app['appserver']['tries'] Default: 5 puma \u00b6 app['appserver']['log_requests'] Supported values: true , false Default: false app['appserver']['thread_max'] Default: 16 app['appserver']['thread_min'] Default: 0 thin \u00b6 app['appserver']['max_connections'] Default: 1024 app['appserver']['max_persistent_connections'] Default: 512 app['appserver']['timeout'] Default: 60 app['appserver']['worker_processes'] Default: 4 webserver \u00b6 Webserver configuration. Proxy passing to application is handled out-of-the-box. Currently Apache2 and nginx is supported. app['webserver']['adapter'] Default: nginx Supported values: apache2 , nginx , null Webserver in front of the instance. It runs on port 80, and receives all requests from Load Balancer/Internet. null means no webserver enabled. app['webserver']['dhparams'] If you wish to use custom generated DH primes, instead of common ones (which is a very good practice), put the contents (not file name) of the dhparams.pem file into this attribute. Read more here. app['webserver']['keepalive_timeout'] Default : 15 The number of seconds webserver will wait for a subsequent request before closing the connection. app['webserver']['ssl_for_legacy_browsers'] Supported values: true , false Default: false By default webserver is configured to follow strict SSL security standards, covered in this article . However, old browsers (like IE < 9 or Android < 2.2) wouldn't work with this configuration very well. If your application needs a support for those browsers, set this parameter to true . apache \u00b6 app['webserver']['extra_config'] Raw Apache2 configuration, which will be inserted into <Virtualhost *:80> section of the application. app['webserver']['extra_config_ssl'] Raw Apache2 configuration, which will be inserted into <Virtualhost *:443> section of the application. If set to true , the extra_config will be copied. app['webserver']['limit_request_body'] Default : 1048576 app['webserver']['log_level'] Default : info app['webserver']['log_dir'] Default : /var/log/apache2 (debian) or /var/log/httpd (rhel) A place to store application-related Apache2 logs. app['webserver']['proxy_timeout'] Default : 60 nginx \u00b6 app['webserver']['build_type'] Supported values: default or source Default: default The way the chef_nginx cookbooks handles nginx installation. Check out the corresponding docs for more details. Never use node['nginx']['install_method'] , as it will be always overwritten by this attribute. app['webserver']['client_body_timeout'] Default: 12 app['webserver']['client_header_timeout'] Default: 12 app['webserver']['client_max_body_size'] Default: 10m app['webserver']['extra_config'] Raw nginx configuration, which will be inserted into server section of the application for HTTP port. app['webserver']['extra_config_ssl'] Raw nginx configuration, which will be inserted into server section of the application for HTTPS port. If set to true , the extra_config will be copied. app['webserver']['log_dir'] Default : /var/log/nginx A place to store application-related nginx logs. app['webserver']['proxy_read_timeout'] Default : 60 app['webserver']['proxy_send_timeout'] Default : 60 app['webserver']['send_timeout'] Default : 10 Since this driver is basically a wrapper for chef_nginx cookbook , you can also configure node['nginx'] attributes as well (notice that node['deploy'][<application_shortname>] logic doesn't apply here.) sidekiq \u00b6 app['worker']['config'] Configuration parameters which will be directly passed to the worker. For example, for sidekiq they will be serialized to sidekiq.yml config file . delayed_job \u00b6 app['worker']['queues'] Array of queues which should be processed by delayed_job resque \u00b6 app['worker']['workers'] Default: 2 Number of resque workers app['worker']['queues'] Default: * Array of queues which should be processed by resque","title":"Attributes"},{"location":"attributes/#attributes","text":"Attributes format follows the guidelines of old Chef 11.x based OpsWorks stack. So all of them, need to be placed under node['deploy'][<application_shortname>] . Attributes (and whole logic of this cookbook) are divided to six sections. Following convention is used: app == node['deploy'][<application_shortname>] so for example app['framework']['adapter'] actually means node['deploy'][<application_shortname>]['framework']['adapter'] .","title":"Attributes"},{"location":"attributes/#stack-attributes","text":"These attributes are used on Stack/Layer level globally to configure the opsworks_ruby cookbook itself. They should'nt be used under node['deploy'][<application_shortname>] (notice lack of the app[] convention). node['applications'] An array of application shortnames which should be deployed to given layer. If set, only applications witch deploy flag set (on OpsWorks side) included in this list will be deployed. If not set, all deploy application will be supported. This parameter mostly matters during the setup phase, since all application in given stack are deployed to the given layer. Using this paramter you can narrow the list to application which you actually intend to use. !!! note Important thing is, that when you try to do a manual deploy from OpsWorks of an application, not included in this list - it will be skipped, as this list takes precedence over anything else. node['ruby-ng']['ruby_version'] Type: string Default: 2.4 Sets the Ruby version used through the system. See ruby-ng cookbook documentation for more details","title":"Stack attributes"},{"location":"attributes/#application-attributes","text":"","title":"Application attributes"},{"location":"attributes/#global","text":"Global parameters apply to the whole application, and can be used by any section (framework, appserver etc.). app['global']['environment'] Type: string Default: production Sets the \"deploy environment\" for all the app-related (for example RAILS_ENV in Rails) actions in the project (server, worker, etc.) app['global']['symlinks'] Note Important Notice: Any values for this parameter will be merged to the defaults Type: key-value Default: { \"system\": \"public/system\", \"assets\": \"public/assets\", \"cache\": \"tmp/cache\", \"pids\": \"tmp/pids\", \"log\": \"log\" } List of symlinks created to the shared directory. The format is {\"shared_path\": \"release_path\"} . For example {\"system\", \"public/system\"} means: Link /src/www/app_name/current/public/system to /src/www/app_name/shared/system . app['global']['create_dirs_before_symlink'] Note Important Notice: Any values for this parameter will be appended to the defaults Type: array Default: [\"tmp\", \"public\", \"config\", \"../../shared/cache\", \"../../shared/assets\"] List of directories to be created before symlinking. Paths are relative to release_path . For example tmp becomes /srv/www/app_name/current/tmp . app['global']['purge_before_symlink'] Note Important Notice: Any values for this parameter will be appended to the defaults Type: array Default: [\"log\", \"tmp/cache\", \"tmp/pids\", \"public/system\", \"public/assets\"] List of directories to be wiped out before symlinking. Paths are relative to release_path . For example tmp becomes /srv/www/app_name/current/tmp . app['global']['rollback_on_error'] Type: boolean Default: true When set to true, any failed deploy will be removed from releases directory.","title":"global"},{"location":"attributes/#database","text":"Those parameters will be passed without any alteration to the database.yml file. Keep in mind, that if you have RDS connected to your OpsWorks application, you don't need to use them. The chef will do all the job, and determine them for you. app['database']['adapter'] Supported values: mariadb , mysql , postgresql , sqlite3 Default: sqlite3 ActiveRecord adapter which will be used for database connection. app['database']['username'] Username used to authenticate to the DB app['database']['password'] Password used to authenticate to the DB app['database']['host'] Database host app['database']['database'] Database name app['database'][<any other>] Any other key-value pair provided here, will be passed directly to the database.yml","title":"database"},{"location":"attributes/#scm","text":"Those parameters can also be determined from OpsWorks application, and usually you don't need to provide them here. Currently only git is supported. app['scm']['scm_provider'] Supported values: git Default: git SCM used by the cookbook to clone the repo. app['scm']['remove_scm_files'] Supported values: true , false Default: true If set to true, all SCM leftovers (like .git ) will be removed. app['scm']['repository'] Repository URL app['scm']['revision'] Branch name/SHA1 of commit which should be use as a base of the deployment. app['scm']['ssh_key'] A private SSH deploy key (the key itself, not the file name), used when fetching repositories via SSH. app['scm']['ssh_wrapper'] A wrapper script, which will be used by git when fetching repository via SSH. Essentially, a value of GIT_SSH environment variable. This cookbook provides one of those scripts for you, so you shouldn't alter this variable unless you know what you're doing. app['scm']['enabled_submodules'] If set to true , any submodules included in the repository, will also be fetched.","title":"scm"},{"location":"attributes/#framework","text":"Pre-optimalization for specific frameworks (like migrations, cache etc.). Currently hanami.rb and Rails are supported. app['framework']['adapter'] Supported values: null , hanami , padrino , rails Default: rails Ruby framework used in project. app['framework']['migrate'] Supported values: true , false Default: true If set to true , migrations will be launch during deployment. app['framework']['migration_command'] A command which will be invoked to perform migration. This cookbook comes with predefined migration commands, well suited for the task, and usually you don't have to change this parameter. app['framework']['assets_precompile'] Supported values: true , false Default: true app['framework']['assets_precompilation_command'] A command which will be invoked to precompile assets.","title":"framework"},{"location":"attributes/#padrino","text":"For Padrino, slight adjustments needs to be made. Since there are many database adapters supported, instead of creating configuration for each one, the DATABASE_URL environmental variable is provided. You need to parse it in your config/database.rb file and properly pass to the configuration options. For example, for ActiveRecord: database_url = ENV['DATABASE_URL'] && ActiveRecord::ConnectionAdapters::ConnectionSpecification::ConnectionUrlResolver.new(ENV['DATABASE_URL']).to_hash ActiveRecord::Base.configurations[:production] = database_url || { :adapter => 'sqlite3', :database => Padrino.root('db', 'dummy_app_production.db') }","title":"padrino"},{"location":"attributes/#rails","text":"app['framework']['envs_in_console'] Warning This is highly unstable feature. If you experience any troubles with deployments, and have this feature enabled, consider disabling it as a first step in your debugging process. Supported values: true , false Default: false If set to true, rails console will be invoked with all application-level environment variables set.","title":"rails"},{"location":"attributes/#appserver","text":"Configuration parameters for the ruby application server. Currently Puma , Thin and Unicorn are supported. app['appserver']['adapter'] Default: puma Supported values: puma , thin , unicorn , null Server on the application side, which will receive requests from webserver in front. null means no appserver enabled. app['appserver']['application_yml'] Supported values: true , false Default: false Creates a config/application.yml file with all pre-configured environment variables. Useful for gems like figaro app['appserver']['dot_env'] Supported values: true , false Default: false Creates a .env file with all pre-configured environment variables. Useful for gems like dotenv app['appserver']['preload_app'] Supported values: true , false Default: true Enabling this preloads an application before forking worker processes. app['appserver']['timeout'] Default: 50 Sets the timeout of worker processes to seconds. app['appserver']['worker_processes']| Default: 4 Sets the current number of worker processes. Each worker process will serve exactly one client at a time.","title":"appserver"},{"location":"attributes/#unicorn","text":"app['appserver']['backlog'] Default: 1024 app['appserver']['delay'] Default: 0.5 app['appserver']['tcp_nodelay'] Supported values: true , false Default: true app['appserver']['tcp_nopush'] Supported values: true , false Default: false app['appserver']['tries'] Default: 5","title":"unicorn"},{"location":"attributes/#puma","text":"app['appserver']['log_requests'] Supported values: true , false Default: false app['appserver']['thread_max'] Default: 16 app['appserver']['thread_min'] Default: 0","title":"puma"},{"location":"attributes/#thin","text":"app['appserver']['max_connections'] Default: 1024 app['appserver']['max_persistent_connections'] Default: 512 app['appserver']['timeout'] Default: 60 app['appserver']['worker_processes'] Default: 4","title":"thin"},{"location":"attributes/#webserver","text":"Webserver configuration. Proxy passing to application is handled out-of-the-box. Currently Apache2 and nginx is supported. app['webserver']['adapter'] Default: nginx Supported values: apache2 , nginx , null Webserver in front of the instance. It runs on port 80, and receives all requests from Load Balancer/Internet. null means no webserver enabled. app['webserver']['dhparams'] If you wish to use custom generated DH primes, instead of common ones (which is a very good practice), put the contents (not file name) of the dhparams.pem file into this attribute. Read more here. app['webserver']['keepalive_timeout'] Default : 15 The number of seconds webserver will wait for a subsequent request before closing the connection. app['webserver']['ssl_for_legacy_browsers'] Supported values: true , false Default: false By default webserver is configured to follow strict SSL security standards, covered in this article . However, old browsers (like IE < 9 or Android < 2.2) wouldn't work with this configuration very well. If your application needs a support for those browsers, set this parameter to true .","title":"webserver"},{"location":"attributes/#apache","text":"app['webserver']['extra_config'] Raw Apache2 configuration, which will be inserted into <Virtualhost *:80> section of the application. app['webserver']['extra_config_ssl'] Raw Apache2 configuration, which will be inserted into <Virtualhost *:443> section of the application. If set to true , the extra_config will be copied. app['webserver']['limit_request_body'] Default : 1048576 app['webserver']['log_level'] Default : info app['webserver']['log_dir'] Default : /var/log/apache2 (debian) or /var/log/httpd (rhel) A place to store application-related Apache2 logs. app['webserver']['proxy_timeout'] Default : 60","title":"apache"},{"location":"attributes/#nginx","text":"app['webserver']['build_type'] Supported values: default or source Default: default The way the chef_nginx cookbooks handles nginx installation. Check out the corresponding docs for more details. Never use node['nginx']['install_method'] , as it will be always overwritten by this attribute. app['webserver']['client_body_timeout'] Default: 12 app['webserver']['client_header_timeout'] Default: 12 app['webserver']['client_max_body_size'] Default: 10m app['webserver']['extra_config'] Raw nginx configuration, which will be inserted into server section of the application for HTTP port. app['webserver']['extra_config_ssl'] Raw nginx configuration, which will be inserted into server section of the application for HTTPS port. If set to true , the extra_config will be copied. app['webserver']['log_dir'] Default : /var/log/nginx A place to store application-related nginx logs. app['webserver']['proxy_read_timeout'] Default : 60 app['webserver']['proxy_send_timeout'] Default : 60 app['webserver']['send_timeout'] Default : 10 Since this driver is basically a wrapper for chef_nginx cookbook , you can also configure node['nginx'] attributes as well (notice that node['deploy'][<application_shortname>] logic doesn't apply here.)","title":"nginx"},{"location":"attributes/#sidekiq","text":"app['worker']['config'] Configuration parameters which will be directly passed to the worker. For example, for sidekiq they will be serialized to sidekiq.yml config file .","title":"sidekiq"},{"location":"attributes/#delayed_job","text":"app['worker']['queues'] Array of queues which should be processed by delayed_job","title":"delayed_job"},{"location":"attributes/#resque","text":"app['worker']['workers'] Default: 2 Number of resque workers app['worker']['queues'] Default: * Array of queues which should be processed by resque","title":"resque"},{"location":"changelog/","text":"Changelog \u00b6 1.4.0 (2017-03-12) \u00b6 Bug Fixes \u00b6 Bump faraday middleware version ( d508928 ) Switched nginx cookbook to more actively developed chef_nginx ( 0f4f64c ), closes #65 Features \u00b6 webserver: Add app specific error log and location for nginx ( a098279 ) worker: Safely quiet and shutdown sidekiq ( c36652f ) BREAKING CHANGES \u00b6 nginx cookbook is not a opsworks_ruby dependency anymore. Now it's chef_nginx which is more actively developed. Please update your recipe repositories. 1.3.0 (2017-01-16) \u00b6 Features \u00b6 appserver: Allowed deploy_before_restart on null appserver ( b0375a6 ) database: Added aurora as allowed engine for mysql2 adapter ( a2789f0 ) ruby: Added support for ruby 2.4 ( a89451f ) BREAKING CHANGES \u00b6 ruby: Ruby 2.4 is now a default Ruby interpreter 1.2.1 (2016-11-27) \u00b6 Bug Fixes \u00b6 Fixed broken migration_command default ( 36cdb68 ), closes #58 1.2.0 (2016-11-02) \u00b6 Bug Fixes \u00b6 Moved global deploy parameters to app['global'] section ( b4f8d6b ) BREAKING CHANGES \u00b6 app['create_dirs_before_symlink'] , app['purge_before_symlink'] , app['rollback_on_error'] and app['symlinks'] are now app['global']['create_dirs_before_symlink'] , app['global']['purge_before_symlink'] , app['global']['rollback_on_error'] and app['global']['symlink'] . The old format still works, but it shows DEPRECATION warning. It will be removed in one of the next major releases. 1.1.2 (2016-10-27) \u00b6 Bug Fixes \u00b6 webserver: Improved apache2 support ( 4293bff ) node['applications'] are back ( 5fc42c3 ), closes #55 Features \u00b6 app['rollback_on_error'] implemented ( e6934a7 ), closes #54 1.1.1 (2016-10-21) \u00b6 Bug Fixes \u00b6 deploy: Fixed deploy callbacks launching order ( 81d31c9 ) 1.1.0 (2016-10-21) \u00b6 Bug Fixes \u00b6 Application deployment fix ( 7ac4166 ) BREAKING CHANGES \u00b6 node['applications'] becomes obsolete 1.0.0 (2016-10-04) \u00b6 Bug Fixes \u00b6 monit reload and monit restart order ( 2c4a84a ), closes #29 appserver: Removed accept_filter from unicorn configurator ( 76a7f36 ) framework: Added missing deploy_environment to null framework ( 673a21d ) framework: Fixed envs_in_console for rails ( f8856c8 ) Features \u00b6 appserver: \"Puma\" support added ( f6e80ad ), closes #38 appserver: \"Thin\" support added ( 9667939 ), closes #39 appserver: Switched default appserver from unicorn to puma ( 0e72200 ) framework: \"hanami.rb\" support added ( 23fdd04 ), closes #43 framework: \"Null\" support added ( b9e7b63 ), closes #47 framework: \"Padrino\" support added ( a240d92 ), closes #44 framework: Environemnt variables in rails console ( 89252b3 ) global: Moved app['environment'] to app['global']['environment'] ( 432a21c ), closes #50 webserver: \"Apache2\" support added ( 1ca5b0b ), closes #40 worker: \"delayed_job\" support added ( 7235720 ), closes #42 worker: \"resque\" support added ( ccc13e4 ), closes #41 Performance Improvements \u00b6 Added fasterer gem to overcommit ( c1ed974 ) BREAKING CHANGES \u00b6 global: If you were using an app['environment'] variable (for example to set env to staging), please update your stack/layer JSONs to app['global']['environment'] . appserver: Unicorn is no longer a default appserver, in favor of Puma. If you have a working instances which were relying on that, you have to either set app['appserver']['adapter'] = 'unicorn' in your stack/layer JSON file, or switch the app server in your application webserver: sites-available and sites-enabled file names format changed. From this commit, the *.conf extension is appended. If you plan to update your cookbooks on productional environments, don't forget to remove the old ones, otherwise you will end up with two the same configurations in different files, which cause nginx to fail. If you start noticing duplicate upstream errors, this is probably due this case. 0.8.0 (2016-09-02) \u00b6 Bug Fixes \u00b6 Switched from nginx reload to nginx restart after succesful deploy/undeploy ( 16ab9d1 ), closes #36 Features \u00b6 Added GIT_SSH support for bundle install ( 232e8ac ), closes #37 Caches bundler installs to speed up deployments ( baa0f44 ) Implemented configurable RAILS_ENV ( 2567b71 ), closes #34 0.7.0 (2016-08-29) \u00b6 Bug Fixes \u00b6 Moved extra env files creation, later in the stack (before_restart) ( 8a5223f ) Reload monit after restarting services ( eaa2aab ) Set the default DB adapter to sqlite3 ( b4b1ee4 ) specify bundle path on bundle install ( b9d4335 ) Features \u00b6 Added support for gems like figaro and dotenv ( c989494 ), closes #28 0.6.0 (2016-08-17) \u00b6 BREAKING CHANGES \u00b6 Removed application_ruby cookbook dependency 0.5.0 (2016-07-21) \u00b6 Features \u00b6 Added configuration for isolated worker servers w/o app/webserver ( 56642f1 ) Added monit compatibility with amazon linux ( 2ef12b9 ) 0.4.0 (2016-06-16) \u00b6 Features \u00b6 Enables drivers to be attached to before_ and after_ deploy events ( fa8e605 ) 0.3.1 (2016-06-16) \u00b6 Bug Fixes \u00b6 Change path to 500.html to be in the \"current\" dir ( 4aeac7f ) Support for multiple RDSes with multiple applications ( a23df47 ) 0.3.0 (2016-06-08) \u00b6 Features \u00b6 eliminate RDS requirement ( daa4254 ) BREAKING CHANGES \u00b6 Sqlite3 is no longer set as the default database adapter. In order to use sqlite as the database adapter it must be defined in the node. 0.2.1 (2016-05-11) \u00b6 Added environment variables support for assets precompile ( f24e742 ) Added optional removal of scm files ( 82b25ec ) Added support for custom configuration in nginx ( 448019a ) Fixed deploy environment ( bf843aa ) Fixed nginx defaults order ( af560db ) Fixed sidekiq config builder ( a32b410 ) 0.2.0 (2016-04-24) \u00b6 Added MariaDB Driver support ( 197b7de ) Added multi-platform support ( 6118154 ) Added MySQL Driver support ( 72d4b9f ) Added Sqlite Driver support ( 3ecb321 ) Minor bugfixes, resolves #19 ( 9f8615f ), closes #19 0.1.0 (2016-04-23) \u00b6 configure recipe initial implementation ( c57f71e ) Added assets precompilation support. Resolves #12 ( b8d8ff5 ), closes #12 Added auto-start of nginx to setup phase. Resolves #15 ( fbb07dc ), closes #15 Added basic documentation ( 235519f ) Added code quality tools ( 730857f ) Added core_ext specs. Resolves #7 ( b089eb3 ), closes #7 Added DHparams and nginx version detection support. Resolves #8 and resolves #9 ( 4e60594 ), closes #8 #9 Added missing specs ( ff85e4f ) Added nginx reload after deploy. Resolves #13 ( f1bc277 ), closes #13 Added ruby and bundler installation to setup phase ( 0182e70 ), closes #5 #6 Added symlinking defaults. Resolves #16 ( 4a1edd9 ), closes #16 Added travis config and coveralls support ( a782a64 ) Added undeploy recipe ( aba311b ) Added webserver setup (nginx) ( 1581def ) Added workers support. Resolves #18 ( 05e3a75 ), closes #18 Appserver implemented (unicorn) ( bbb79cc ) Basic SCM support implemented ( bcab3d7 ) Finished database support in recipes ( cf955a0 ) Fixed appserver restart sequence ( 9a75f9c ) Fixed nginx defaults. Resolves #14 and resolves #17 ( 8320f3b ), closes #14 #17 Fixes on bugs detected while deploying to real OpsWorks ( 035363b ) Initial commit ( d8bed5c ) Initial version, with simple postgresql driver introduced ( 5d00083 ) Moved DB packages installation from configure to setup ( e23f2d4 ) Moved libraries to flat directory structure, because AWS chef hates us ( e6aa211 ) Rails deploy hooks implemented ( 79d2d64 ) Recipes cleanup: added missing actions and shutdown recipe ( 9eb9bb8 ) Reorganized appserver cookbooks, added bundle install to deploy ( 2e9947b )","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#140-2017-03-12","text":"","title":"1.4.0 (2017-03-12)"},{"location":"changelog/#bug-fixes","text":"Bump faraday middleware version ( d508928 ) Switched nginx cookbook to more actively developed chef_nginx ( 0f4f64c ), closes #65","title":"Bug Fixes"},{"location":"changelog/#features","text":"webserver: Add app specific error log and location for nginx ( a098279 ) worker: Safely quiet and shutdown sidekiq ( c36652f )","title":"Features"},{"location":"changelog/#breaking-changes","text":"nginx cookbook is not a opsworks_ruby dependency anymore. Now it's chef_nginx which is more actively developed. Please update your recipe repositories.","title":"BREAKING CHANGES"},{"location":"changelog/#130-2017-01-16","text":"","title":"1.3.0 (2017-01-16)"},{"location":"changelog/#features_1","text":"appserver: Allowed deploy_before_restart on null appserver ( b0375a6 ) database: Added aurora as allowed engine for mysql2 adapter ( a2789f0 ) ruby: Added support for ruby 2.4 ( a89451f )","title":"Features"},{"location":"changelog/#breaking-changes_1","text":"ruby: Ruby 2.4 is now a default Ruby interpreter","title":"BREAKING CHANGES"},{"location":"changelog/#121-2016-11-27","text":"","title":"1.2.1 (2016-11-27)"},{"location":"changelog/#bug-fixes_1","text":"Fixed broken migration_command default ( 36cdb68 ), closes #58","title":"Bug Fixes"},{"location":"changelog/#120-2016-11-02","text":"","title":"1.2.0 (2016-11-02)"},{"location":"changelog/#bug-fixes_2","text":"Moved global deploy parameters to app['global'] section ( b4f8d6b )","title":"Bug Fixes"},{"location":"changelog/#breaking-changes_2","text":"app['create_dirs_before_symlink'] , app['purge_before_symlink'] , app['rollback_on_error'] and app['symlinks'] are now app['global']['create_dirs_before_symlink'] , app['global']['purge_before_symlink'] , app['global']['rollback_on_error'] and app['global']['symlink'] . The old format still works, but it shows DEPRECATION warning. It will be removed in one of the next major releases.","title":"BREAKING CHANGES"},{"location":"changelog/#112-2016-10-27","text":"","title":"1.1.2 (2016-10-27)"},{"location":"changelog/#bug-fixes_3","text":"webserver: Improved apache2 support ( 4293bff ) node['applications'] are back ( 5fc42c3 ), closes #55","title":"Bug Fixes"},{"location":"changelog/#features_2","text":"app['rollback_on_error'] implemented ( e6934a7 ), closes #54","title":"Features"},{"location":"changelog/#111-2016-10-21","text":"","title":"1.1.1 (2016-10-21)"},{"location":"changelog/#bug-fixes_4","text":"deploy: Fixed deploy callbacks launching order ( 81d31c9 )","title":"Bug Fixes"},{"location":"changelog/#110-2016-10-21","text":"","title":"1.1.0 (2016-10-21)"},{"location":"changelog/#bug-fixes_5","text":"Application deployment fix ( 7ac4166 )","title":"Bug Fixes"},{"location":"changelog/#breaking-changes_3","text":"node['applications'] becomes obsolete","title":"BREAKING CHANGES"},{"location":"changelog/#100-2016-10-04","text":"","title":"1.0.0 (2016-10-04)"},{"location":"changelog/#bug-fixes_6","text":"monit reload and monit restart order ( 2c4a84a ), closes #29 appserver: Removed accept_filter from unicorn configurator ( 76a7f36 ) framework: Added missing deploy_environment to null framework ( 673a21d ) framework: Fixed envs_in_console for rails ( f8856c8 )","title":"Bug Fixes"},{"location":"changelog/#features_3","text":"appserver: \"Puma\" support added ( f6e80ad ), closes #38 appserver: \"Thin\" support added ( 9667939 ), closes #39 appserver: Switched default appserver from unicorn to puma ( 0e72200 ) framework: \"hanami.rb\" support added ( 23fdd04 ), closes #43 framework: \"Null\" support added ( b9e7b63 ), closes #47 framework: \"Padrino\" support added ( a240d92 ), closes #44 framework: Environemnt variables in rails console ( 89252b3 ) global: Moved app['environment'] to app['global']['environment'] ( 432a21c ), closes #50 webserver: \"Apache2\" support added ( 1ca5b0b ), closes #40 worker: \"delayed_job\" support added ( 7235720 ), closes #42 worker: \"resque\" support added ( ccc13e4 ), closes #41","title":"Features"},{"location":"changelog/#performance-improvements","text":"Added fasterer gem to overcommit ( c1ed974 )","title":"Performance Improvements"},{"location":"changelog/#breaking-changes_4","text":"global: If you were using an app['environment'] variable (for example to set env to staging), please update your stack/layer JSONs to app['global']['environment'] . appserver: Unicorn is no longer a default appserver, in favor of Puma. If you have a working instances which were relying on that, you have to either set app['appserver']['adapter'] = 'unicorn' in your stack/layer JSON file, or switch the app server in your application webserver: sites-available and sites-enabled file names format changed. From this commit, the *.conf extension is appended. If you plan to update your cookbooks on productional environments, don't forget to remove the old ones, otherwise you will end up with two the same configurations in different files, which cause nginx to fail. If you start noticing duplicate upstream errors, this is probably due this case.","title":"BREAKING CHANGES"},{"location":"changelog/#080-2016-09-02","text":"","title":"0.8.0 (2016-09-02)"},{"location":"changelog/#bug-fixes_7","text":"Switched from nginx reload to nginx restart after succesful deploy/undeploy ( 16ab9d1 ), closes #36","title":"Bug Fixes"},{"location":"changelog/#features_4","text":"Added GIT_SSH support for bundle install ( 232e8ac ), closes #37 Caches bundler installs to speed up deployments ( baa0f44 ) Implemented configurable RAILS_ENV ( 2567b71 ), closes #34","title":"Features"},{"location":"changelog/#070-2016-08-29","text":"","title":"0.7.0 (2016-08-29)"},{"location":"changelog/#bug-fixes_8","text":"Moved extra env files creation, later in the stack (before_restart) ( 8a5223f ) Reload monit after restarting services ( eaa2aab ) Set the default DB adapter to sqlite3 ( b4b1ee4 ) specify bundle path on bundle install ( b9d4335 )","title":"Bug Fixes"},{"location":"changelog/#features_5","text":"Added support for gems like figaro and dotenv ( c989494 ), closes #28","title":"Features"},{"location":"changelog/#060-2016-08-17","text":"","title":"0.6.0 (2016-08-17)"},{"location":"changelog/#breaking-changes_5","text":"Removed application_ruby cookbook dependency","title":"BREAKING CHANGES"},{"location":"changelog/#050-2016-07-21","text":"","title":"0.5.0 (2016-07-21)"},{"location":"changelog/#features_6","text":"Added configuration for isolated worker servers w/o app/webserver ( 56642f1 ) Added monit compatibility with amazon linux ( 2ef12b9 )","title":"Features"},{"location":"changelog/#040-2016-06-16","text":"","title":"0.4.0 (2016-06-16)"},{"location":"changelog/#features_7","text":"Enables drivers to be attached to before_ and after_ deploy events ( fa8e605 )","title":"Features"},{"location":"changelog/#031-2016-06-16","text":"","title":"0.3.1 (2016-06-16)"},{"location":"changelog/#bug-fixes_9","text":"Change path to 500.html to be in the \"current\" dir ( 4aeac7f ) Support for multiple RDSes with multiple applications ( a23df47 )","title":"Bug Fixes"},{"location":"changelog/#030-2016-06-08","text":"","title":"0.3.0 (2016-06-08)"},{"location":"changelog/#features_8","text":"eliminate RDS requirement ( daa4254 )","title":"Features"},{"location":"changelog/#breaking-changes_6","text":"Sqlite3 is no longer set as the default database adapter. In order to use sqlite as the database adapter it must be defined in the node.","title":"BREAKING CHANGES"},{"location":"changelog/#021-2016-05-11","text":"Added environment variables support for assets precompile ( f24e742 ) Added optional removal of scm files ( 82b25ec ) Added support for custom configuration in nginx ( 448019a ) Fixed deploy environment ( bf843aa ) Fixed nginx defaults order ( af560db ) Fixed sidekiq config builder ( a32b410 )","title":"0.2.1 (2016-05-11)"},{"location":"changelog/#020-2016-04-24","text":"Added MariaDB Driver support ( 197b7de ) Added multi-platform support ( 6118154 ) Added MySQL Driver support ( 72d4b9f ) Added Sqlite Driver support ( 3ecb321 ) Minor bugfixes, resolves #19 ( 9f8615f ), closes #19","title":"0.2.0 (2016-04-24)"},{"location":"changelog/#010-2016-04-23","text":"configure recipe initial implementation ( c57f71e ) Added assets precompilation support. Resolves #12 ( b8d8ff5 ), closes #12 Added auto-start of nginx to setup phase. Resolves #15 ( fbb07dc ), closes #15 Added basic documentation ( 235519f ) Added code quality tools ( 730857f ) Added core_ext specs. Resolves #7 ( b089eb3 ), closes #7 Added DHparams and nginx version detection support. Resolves #8 and resolves #9 ( 4e60594 ), closes #8 #9 Added missing specs ( ff85e4f ) Added nginx reload after deploy. Resolves #13 ( f1bc277 ), closes #13 Added ruby and bundler installation to setup phase ( 0182e70 ), closes #5 #6 Added symlinking defaults. Resolves #16 ( 4a1edd9 ), closes #16 Added travis config and coveralls support ( a782a64 ) Added undeploy recipe ( aba311b ) Added webserver setup (nginx) ( 1581def ) Added workers support. Resolves #18 ( 05e3a75 ), closes #18 Appserver implemented (unicorn) ( bbb79cc ) Basic SCM support implemented ( bcab3d7 ) Finished database support in recipes ( cf955a0 ) Fixed appserver restart sequence ( 9a75f9c ) Fixed nginx defaults. Resolves #14 and resolves #17 ( 8320f3b ), closes #14 #17 Fixes on bugs detected while deploying to real OpsWorks ( 035363b ) Initial commit ( d8bed5c ) Initial version, with simple postgresql driver introduced ( 5d00083 ) Moved DB packages installation from configure to setup ( e23f2d4 ) Moved libraries to flat directory structure, because AWS chef hates us ( e6aa211 ) Rails deploy hooks implemented ( 79d2d64 ) Recipes cleanup: added missing actions and shutdown recipe ( 9eb9bb8 ) Reorganized appserver cookbooks, added bundle install to deploy ( 2e9947b )","title":"0.1.0 (2016-04-23)"},{"location":"contributing/","text":"Contributing \u00b6 Contributions are welcome and will be fully credited . We accept contributions via Pull Requests on Github . Pull Requests \u00b6 Lint your code - The easiest way to apply the conventions is to install overcommit . Add tests! - Your patch won't be accepted if it doesn't have tests. Document any change in behaviour - Make sure the README and any other relevant documentation are kept up-to-date. Consider our release cycle - We try to follow semver . Randomly breaking public APIs is not an option. Create topic branches - Don't ask us to pull from your master branch. One pull request per feature - If you want to do more than one thing, send multiple pull requests. Send coherent history - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please squash them before submitting. Commit convention - We follow AngularJS Git Commit Message Conventions Running Tests \u00b6 Ensure, that you have Chef DK installed. bundle exec overcommit -r chef exec rspec Happy coding!","title":"Contributing"},{"location":"contributing/#contributing","text":"Contributions are welcome and will be fully credited . We accept contributions via Pull Requests on Github .","title":"Contributing"},{"location":"contributing/#pull-requests","text":"Lint your code - The easiest way to apply the conventions is to install overcommit . Add tests! - Your patch won't be accepted if it doesn't have tests. Document any change in behaviour - Make sure the README and any other relevant documentation are kept up-to-date. Consider our release cycle - We try to follow semver . Randomly breaking public APIs is not an option. Create topic branches - Don't ask us to pull from your master branch. One pull request per feature - If you want to do more than one thing, send multiple pull requests. Send coherent history - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please squash them before submitting. Commit convention - We follow AngularJS Git Commit Message Conventions","title":"Pull Requests"},{"location":"contributing/#running-tests","text":"Ensure, that you have Chef DK installed. bundle exec overcommit -r chef exec rspec Happy coding!","title":"Running Tests"},{"location":"getting-started/","text":"Getting Started \u00b6 Super Quick Start \u00b6 This cookbook is designed to \"just work\". So in base case scenario, all you have to do is create a layer and application with an optional assigned RDS data source, then add Recipes to the corresponding OpsWorks actions. The base scenario includes nginx as a web server, puma as application server, Ruby on Rails as framework, and no extra workers (sidekiq/resque/etc.). If this okay for you, and if you configured RDS and application properly from OpsWorks panel - you don't have to do anything else with those recipes. Quick Start \u00b6 Alternativelly, you can use a JSON configurator , which is a nice tool which would help you quickly generate Stack/Layer JSON (and hassle free). It supports, all the configuration parameters in most of the cases. If you wish to configure multiple apps, use the generator for each one of them separately. Full configuration \u00b6 You can always create your JSON file manually, just head to the Attributes section of this documentation, and check which one you need.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"getting-started/#super-quick-start","text":"This cookbook is designed to \"just work\". So in base case scenario, all you have to do is create a layer and application with an optional assigned RDS data source, then add Recipes to the corresponding OpsWorks actions. The base scenario includes nginx as a web server, puma as application server, Ruby on Rails as framework, and no extra workers (sidekiq/resque/etc.). If this okay for you, and if you configured RDS and application properly from OpsWorks panel - you don't have to do anything else with those recipes.","title":"Super Quick Start"},{"location":"getting-started/#quick-start","text":"Alternativelly, you can use a JSON configurator , which is a nice tool which would help you quickly generate Stack/Layer JSON (and hassle free). It supports, all the configuration parameters in most of the cases. If you wish to configure multiple apps, use the generator for each one of them separately.","title":"Quick Start"},{"location":"getting-started/#full-configuration","text":"You can always create your JSON file manually, just head to the Attributes section of this documentation, and check which one you need.","title":"Full configuration"},{"location":"license/","text":"License The MIT License (MIT) Copyright (c) 2016 Igor Rzegocki Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"recipes/","text":"Recipes \u00b6 This cookbook provides five main recipes, which should be attached to corresponding OpsWorks actions. opsworks_ruby::setup - attach to Setup opsworks_ruby::configure - attach to Configure opsworks_ruby::deploy - attach to Deploy opsworks_ruby::undeploy - attach to Undeploy opsworks_ruby::shutdown - attach to Shutdown","title":"Recipes"},{"location":"recipes/#recipes","text":"This cookbook provides five main recipes, which should be attached to corresponding OpsWorks actions. opsworks_ruby::setup - attach to Setup opsworks_ruby::configure - attach to Configure opsworks_ruby::deploy - attach to Deploy opsworks_ruby::undeploy - attach to Undeploy opsworks_ruby::shutdown - attach to Shutdown","title":"Recipes"},{"location":"requirements/","text":"Requirements \u00b6 Cookbooks \u00b6 deployer ruby-ng chef_nginx Platform \u00b6 This cookbook was tested on the following OpsWorks platforms: Amazon Linux 2016.03 Amazon Linux 2015.09 Amazon Linux 2015.03 Ubuntu 14.04 LTS Ubuntu 12.04 LTS In addition, all recent Debian family distrubutions are assumed to work.","title":"Requirements"},{"location":"requirements/#requirements","text":"","title":"Requirements"},{"location":"requirements/#cookbooks","text":"deployer ruby-ng chef_nginx","title":"Cookbooks"},{"location":"requirements/#platform","text":"This cookbook was tested on the following OpsWorks platforms: Amazon Linux 2016.03 Amazon Linux 2015.09 Amazon Linux 2015.03 Ubuntu 14.04 LTS Ubuntu 12.04 LTS In addition, all recent Debian family distrubutions are assumed to work.","title":"Platform"},{"location":"support/","text":"Supported Technologies \u00b6 Database MariaDB MySQL PostgreSQL Sqlite3 SCM Git Framework Null (no framework) hanami.rb Padrino Ruby on Rails App server Null (no appserver) Puma Thin Unicorn Web server Null (no webserver) Apache2 nginx Worker Null (no worker) delayed_job resque sidekiq","title":"Supported Technologies"},{"location":"support/#supported-technologies","text":"Database MariaDB MySQL PostgreSQL Sqlite3 SCM Git Framework Null (no framework) hanami.rb Padrino Ruby on Rails App server Null (no appserver) Puma Thin Unicorn Web server Null (no webserver) Apache2 nginx Worker Null (no worker) delayed_job resque sidekiq","title":"Supported Technologies"},{"location":"team/","text":"Author and Contributors \u00b6 Author \u00b6 Igor Rzegocki ( @ajgon ) Contributors \u00b6 Phong Si ( @phongsi ) Nathan Flood ( @npflood ) Marcos Beirigo ( @marcosbeirigo )","title":"Author and Contributors"},{"location":"team/#author-and-contributors","text":"","title":"Author and Contributors"},{"location":"team/#author","text":"Igor Rzegocki ( @ajgon )","title":"Author"},{"location":"team/#contributors","text":"Phong Si ( @phongsi ) Nathan Flood ( @npflood ) Marcos Beirigo ( @marcosbeirigo )","title":"Contributors"},{"location":"troubleshooting/","text":"Troubleshooting \u00b6 Deployment fails with errors regarding application code \u00b6 If you have enabled app['framework']['envs_in_console'] parameter, always disable it first and check if error occurs again. This parameter is a \"hack\" on rails config/application.rb file, which inserts all application environment variables before initializing the Rails stack. This may cause some problems (in very rare cases), and break this file. SSL not working in legacy browsers \u00b6 By default webserver is configured to follow strict SSL security standards, covered in this article . However, old browsers (like IE < 9 or Android < 2.2) wouldn't work with this configuration very well. If your application needs a support for those browsers, set app['webserver']['ssl_for_legacy_browsers'] to true. Some applications on my Layer deploys, some of them not \u00b6 Check the node['applications'] parameter in Attributes section. If set, it narrows down the list of applications allowed to deploy, to its value. If not sure what to do - try to remove from your Stack/Layer config and see if this helps.","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"troubleshooting/#deployment-fails-with-errors-regarding-application-code","text":"If you have enabled app['framework']['envs_in_console'] parameter, always disable it first and check if error occurs again. This parameter is a \"hack\" on rails config/application.rb file, which inserts all application environment variables before initializing the Rails stack. This may cause some problems (in very rare cases), and break this file.","title":"Deployment fails with errors regarding application code"},{"location":"troubleshooting/#ssl-not-working-in-legacy-browsers","text":"By default webserver is configured to follow strict SSL security standards, covered in this article . However, old browsers (like IE < 9 or Android < 2.2) wouldn't work with this configuration very well. If your application needs a support for those browsers, set app['webserver']['ssl_for_legacy_browsers'] to true.","title":"SSL not working in legacy browsers"},{"location":"troubleshooting/#some-applications-on-my-layer-deploys-some-of-them-not","text":"Check the node['applications'] parameter in Attributes section. If set, it narrows down the list of applications allowed to deploy, to its value. If not sure what to do - try to remove from your Stack/Layer config and see if this helps.","title":"Some applications on my Layer deploys, some of them not"}]}